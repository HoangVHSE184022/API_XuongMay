CREATE TABLE Accounts
(
  AccountId UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID(),
  Name NVARCHAR(200) NOT NULL,
  Username NVARCHAR(200) NOT NULL,
  Password NVARCHAR(200) NOT NULL,
  Role NVARCHAR(200) NOT NULL,
  Salary INT NOT NULL,
  Status Nvarchar(200) NOT NULL,
  PRIMARY KEY (AccountId)
);

CREATE TABLE Orders
(
  OrderId UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID(),
  CreatedDate DATETIME NOT NULL,
  FinishDate DATETIME NOT NULL,
  Status NVARCHAR(200) NOT NULL,
  Deadline DATETIME NOT NULL,
  AccountId UNIQUEIDENTIFIER NOT NULL,
  AssignedAccountId UNIQUEIDENTIFIER NOT NULL,
  PRIMARY KEY (OrderId),
  FOREIGN KEY (AccountId) REFERENCES Accounts(AccountId),
  FOREIGN KEY (AssignedAccountId) REFERENCES Accounts(AccountId)
);

CREATE TABLE Categories
(
  CategoryId UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID(),
  CategoryName NVARCHAR(200) NOT NULL,
  CategoryDescription NVARCHAR(200) NOT NULL,
  CategoryStatus NVARCHAR(200) NOT NULL,
  PRIMARY KEY (CategoryId)
);

CREATE TABLE Products
(
  ProductId UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID(),
  ProductName NVARCHAR(200) NOT NULL,
  ProductSize NVARCHAR(200) NOT NULL,
  Status NVARCHAR(200) NOT NULL,
  CategoryId UNIQUEIDENTIFIER NOT NULL,
  PRIMARY KEY (ProductId),
  FOREIGN KEY (CategoryId) REFERENCES Categories(CategoryId)
);

CREATE TABLE OrderDetail
(
  DetailId UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID(),
  NumberOfProds INT NOT NULL,
  Status NVARCHAR(200) NOT NULL,
  OrderId UNIQUEIDENTIFIER NOT NULL,
  ProductId UNIQUEIDENTIFIER NOT NULL,
  PRIMARY KEY (DetailId),
  FOREIGN KEY (OrderId) REFERENCES Orders(OrderId),
  FOREIGN KEY (ProductId) REFERENCES Products(ProductId)
);
